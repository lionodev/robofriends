{"map":"{\"version\":3,\"sources\":[\"/home/sayed109/Desktop/robofriends/src/components/Card.js\",\"/home/sayed109/Desktop/robofriends/src/components/CardList.js\",\"/home/sayed109/Desktop/robofriends/src/components/SearchBox.js\",\"/home/sayed109/Desktop/robofriends/src/components/Scroll.js\",\"/home/sayed109/Desktop/robofriends/src/containers/App.js\",\"/home/sayed109/Desktop/robofriends/src/registerServiceWorker.js\",\"/home/sayed109/Desktop/robofriends/src/index.js\"],\"names\":[\"Card\",\"_ref\",\"name\",\"email\",\"id\",\"react_default\",\"a\",\"createElement\",\"className\",\"alt\",\"src\",\"concat\",\"CardList\",\"robots\",\"map\",\"user\",\"i\",\"components_Card\",\"key\",\"SearchBox\",\"searchfield\",\"searchChange\",\"type\",\"placeholder\",\"onChange\",\"Scroll\",\"props\",\"style\",\"overflow\",\"border\",\"height\",\"children\",\"App\",\"_this\",\"Object\",\"classCallCheck\",\"this\",\"possibleConstructorReturn\",\"getPrototypeOf\",\"call\",\"onSearchChange\",\"event\",\"setState\",\"target\",\"value\",\"state\",\"_this2\",\"fetch\",\"then\",\"response\",\"json\",\"users\",\"_this$state\",\"filteredRobots\",\"filter\",\"robot\",\"toLowerCase\",\"includes\",\"length\",\"components_SearchBox\",\"components_Scroll\",\"components_CardList\",\"Component\",\"isLocalhost\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"registerValidSW\",\"swUrl\",\"navigator\",\"serviceWorker\",\"register\",\"registration\",\"onupdatefound\",\"installingWorker\",\"installing\",\"onstatechange\",\"controller\",\"console\",\"log\",\"catch\",\"error\",\"ReactDOM\",\"render\",\"src_containers_App\",\"document\",\"getElementById\",\"URL\",\"process\",\"origin\",\"addEventListener\",\"status\",\"headers\",\"get\",\"indexOf\",\"ready\",\"unregister\",\"reload\",\"checkValidServiceWorker\",\"registerServiceWorker\"],\"mappings\":\"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\",\"sourcesContent\":[\"import React from 'react';\\n\\nconst Card = ({ name, email, id }) => {\\n  return (\\n    <div className='tc grow bg-light-green br3 pa3 ma2 dib bw2 shadow-5'>\\n      <img alt='robots' src={`https://robohash.org/${id}?size=200x200`} />\\n      <div>\\n        <h2>{name}</h2>\\n        <p>{email}</p>\\n      </div>\\n    </div>\\n  );\\n}\\n\\nexport default Card;\\n\",\"import React from 'react';\\nimport Card from './Card';\\n\\nconst CardList = ({ robots }) => {\\n  return (\\n    <div>\\n      {\\n        robots.map((user, i) => {\\n          return (\\n            <Card\\n              key={i}\\n              id={robots[i].id}\\n              name={robots[i].name}\\n              email={robots[i].email}\\n              />\\n          );\\n        })\\n      }\\n    </div>\\n  );\\n}\\n\\nexport default CardList;\",\"import React from 'react';\\n\\nconst SearchBox = ({ searchfield, searchChange }) => {\\n  return (\\n    <div className='pa2'>\\n      <input\\n        className='pa3 ba b--green bg-lightest-blue'\\n        type='search'\\n        placeholder='search robots'\\n        onChange={searchChange}\\n      />\\n    </div>\\n  );\\n}\\n\\nexport default SearchBox;\",\"import React from 'react';\\n\\nconst Scroll = (props) => {\\n  return (\\n    <div style={{ overflow: 'auto', border: '5px solid black', height: '72vh'}}>\\n      {props.children}\\n    </div>\\n  );\\n};\\n\\nexport default Scroll;\",\"import React, { Component } from 'react';\\nimport CardList from '../components/CardList';\\nimport SearchBox from '../components/SearchBox';\\nimport Scroll from '../components/Scroll';\\nimport './App.css';\\n\\nclass App extends Component {\\n  constructor() {\\n    super()\\n    this.state = {\\n      robots: [],\\n      searchfield: ''\\n    }\\n  }\\n\\n  componentDidMount() {\\n    fetch('https://jsonplaceholder.typicode.com/users')\\n      .then(response=> response.json())\\n      .then(users => {this.setState({ robots: users})});\\n  }\\n\\n  onSearchChange = (event) => {\\n    this.setState({ searchfield: event.target.value })\\n  }\\n\\n  render() {\\n    const { robots, searchfield } = this.state;\\n    const filteredRobots = robots.filter(robot =>{\\n      return robot.name.toLowerCase().includes(searchfield.toLowerCase());\\n    })\\n    return !robots.length ?\\n      <h1>Loading</h1> :\\n      (\\n        <div className='tc'>\\n          <h1 className='f1'>RoboFriends</h1>\\n          <SearchBox searchChange={this.onSearchChange}/>\\n          <Scroll>\\n            <CardList robots={filteredRobots} />\\n          </Scroll>\\n        </div>\\n      );\\n  }\\n}\\n\\nexport default App;\",\"// In production, we register a service worker to serve assets from local cache.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on the \\\"N+1\\\" visit to a page, since previously\\n// cached resources are updated in the background.\\n\\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\\n// This link also includes instructions on opting out of this behavior.\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport default function register() {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Lets check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl);\\n      } else {\\n        // Is not local host. Just register service worker\\n        registerValidSW(swUrl);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the old content will have been purged and\\n              // the fresh content will have been added to the cache.\\n              // It's the perfect time to display a \\\"New content is\\n              // available; please refresh.\\\" message in your web app.\\n              console.log('New content is available; please refresh.');\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      if (\\n        response.status === 404 ||\\n        response.headers.get('content-type').indexOf('javascript') === -1\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './containers/App';\\nimport registerServiceWorker from './registerServiceWorker';\\nimport 'tachyons';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\nregisterServiceWorker();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{14:function(e,n,t){},15:function(e,n,t){},17:function(e,n,t){\"use strict\";t.r(n);var o=t(0),a=t.n(o),r=t(2),i=t.n(r),c=(t(14),t(3)),l=t(4),s=t(6),u=t(5),h=t(7),d=function(e){var n=e.name,t=e.email,o=e.id;return a.a.createElement(\"div\",{className:\"tc grow bg-light-green br3 pa3 ma2 dib bw2 shadow-5\"},a.a.createElement(\"img\",{alt:\"robots\",src:\"https://robohash.org/\".concat(o,\"?size=200x200\")}),a.a.createElement(\"div\",null,a.a.createElement(\"h2\",null,n),a.a.createElement(\"p\",null,t)))},f=function(e){var n=e.robots;return a.a.createElement(\"div\",null,n.map(function(e,t){return a.a.createElement(d,{key:t,id:n[t].id,name:n[t].name,email:n[t].email})}))},m=function(e){e.searchfield;var n=e.searchChange;return a.a.createElement(\"div\",{className:\"pa2\"},a.a.createElement(\"input\",{className:\"pa3 ba b--green bg-lightest-blue\",type:\"search\",placeholder:\"search robots\",onChange:n}))},g=function(e){return a.a.createElement(\"div\",{style:{overflow:\"auto\",border:\"5px solid black\",height:\"72vh\"}},e.children)},v=(t(15),function(e){function n(){var e;return Object(c.a)(this,n),(e=Object(s.a)(this,Object(u.a)(n).call(this))).onSearchChange=function(n){e.setState({searchfield:n.target.value})},e.state={robots:[],searchfield:\"\"},e}return Object(h.a)(n,e),Object(l.a)(n,[{key:\"componentDidMount\",value:function(){var e=this;fetch(\"https://jsonplaceholder.typicode.com/users\").then(function(e){return e.json()}).then(function(n){e.setState({robots:n})})}},{key:\"render\",value:function(){var e=this.state,n=e.robots,t=e.searchfield,o=n.filter(function(e){return e.name.toLowerCase().includes(t.toLowerCase())});return n.length?a.a.createElement(\"div\",{className:\"tc\"},a.a.createElement(\"h1\",{className:\"f1\"},\"RoboFriends\"),a.a.createElement(m,{searchChange:this.onSearchChange}),a.a.createElement(g,null,a.a.createElement(f,{robots:o}))):a.a.createElement(\"h1\",null,\"Loading\")}}]),n}(o.Component)),w=Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));function b(e){navigator.serviceWorker.register(e).then(function(e){e.onupdatefound=function(){var n=e.installing;n.onstatechange=function(){\"installed\"===n.state&&(navigator.serviceWorker.controller?console.log(\"New content is available; please refresh.\"):console.log(\"Content is cached for offline use.\"))}}}).catch(function(e){console.error(\"Error during service worker registration:\",e)})}t(16);i.a.render(a.a.createElement(v,null),document.getElementById(\"root\")),function(){if(\"serviceWorker\"in navigator){if(new URL(\"/robofriends\",window.location).origin!==window.location.origin)return;window.addEventListener(\"load\",function(){var e=\"\".concat(\"/robofriends\",\"/service-worker.js\");w?function(e){fetch(e).then(function(n){404===n.status||-1===n.headers.get(\"content-type\").indexOf(\"javascript\")?navigator.serviceWorker.ready.then(function(e){e.unregister().then(function(){window.location.reload()})}):b(e)}).catch(function(){console.log(\"No internet connection found. App is running in offline mode.\")})}(e):b(e)})}}()},8:function(e,n,t){e.exports=t(17)}},[[8,1,2]]]);","extractedComments":[]}